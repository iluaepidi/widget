{
  "name": "gpii-express-user",
  "version": "1.0.0",
  "description": "A series of Fluid components to provide simple user management.",
  "main": "src/js/index.js",
  "scripts": {
    "test": "node tests/all-tests.js",
    "postinstall": "bower install"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GPII/gpii-express-user.git"
  },
  "author": {
    "name": "Tony Atkins",
    "email": "tony@raisingthefloor.org"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/GPII/gpii-express-user/issues"
  },
  "homepage": "https://github.com/GPII/gpii-express-user",
  "dependencies": {
    "gpii-binder": "git://github.com/the-t-in-rtf/gpii-binder.git#c83ff8cde8ba37c72f7e26bebf81c44d1a681c36",
    "gpii-express": "git://github.com/the-t-in-rtf/gpii-express.git#59e852d74d5a198bb96190d47073b97fff224fd9",
    "gpii-handlebars": "git://github.com/the-t-in-rtf/gpii-handlebars.git#29f6ba242ef97a43f92e3588ba310ae46d336974",
    "gpii-json-schema": "git://github.com/the-t-in-rtf/gpii-json-schema.git#1f2e57f02113bb55c7cce7a06e805c4c84023970",
    "handlebars": "4.0.0",
    "infusion": "2.0.0-dev.20151211T025229Z.eabb4fc",
    "kettle": "git://github.com/amb26/kettle.git#2517cc1d9d047d58aef70db48d1580da718ffc16",
    "marked": "^0.3.5",
    "nodemailer": "^1.4.0",
    "nodemailer-smtp-transport": "^1.0.3",
    "request": "^2.63.0"
  },
  "devDependencies": {
    "cookie": "^0.2.0",
    "gpii-mail-test": "git://github.com/the-t-in-rtf/gpii-mail-test.git#22500bab7fa5d32e94acdccbfa7b3666b2357e58",
    "gpii-pouchdb": "git://github.com/the-t-in-rtf/gpii-pouchdb.git#0d2878d35b4100a1b90277e903467e6b9a18cffe",
    "gpii-test-browser": "git://github.com/the-t-in-rtf/gpii-test-browser.git#04a45c1683e69ae9453f55b049c96b90cac32c39",
    "grunt": "0.4.4",
    "grunt-contrib-jshint": "0.9.0",
    "grunt-jsonlint": "1.0.4",
    "grunt-shell": "0.6.4",
    "mailparser": "^0.5.2",
    "node-jqunit": "~1.1.3"
  },
  "gitHead": "8e635db62eb0ad7c286a9d1b802ab366b6107c29",
  "readme": "This package provides a series of server and client-side Fluid components to provide simple user management, including:\n\n1. Login, logout, and \"current user\" mechanisms.\n2. A \"signup\" mechanism to allow users to create accounts themselves.  Accounts must be associated with a valid email to be complete the setup.\n3. A \"forgot password\" mechanism that sends the user a custom link via email that can be used to reset their password.\n\n# Server Side Components\n\nThe server side components are intended to be used with a `gpii.express` instance, and provide the REST API endpoints\ndocumented in `src/docs/api.md`. Before you can use the server side components, you must set up your database with the\nviews included in `src/views` (see that directory for details).\n\nAll user information stored by this package is meant to be backward compatible with CouchDB and express-couchUser.\nAccounts created using this package should be usable from either of those packages as well (in the case of CouchDB, the\naccounts would have to be written to the `_user` database).  You should be able to safely copy or synchronize accounts\nbetween any two sites that use this package.\n\nWhen writing your own server-side components that depend on the current user's information, the current user will\nalways be available as part of the `request.session` object.  The user key may change depending on your configuration,\nby default the user is found at `request.session._gpii_user`.\n\n# Client Side Components\n\nThe client-side components provided here are intended to be used with the server-side API running on the same hostname\nand port that hosts the client-side content.  No CORS, proxy, or other mechanism is provided to handle remote lookups.\n\nTo use the client side components, set up your `gpii.express` instance with a static handler that will serve up the\ncontents of `src/js/client`, and a `gpii.express.hb` instance that can serve up the required template content.  It is\nrecommended that you copy the sample template content found in `src/templates` to your template directory and customize\nbased on your specific needs.\n\nFor an example of both the server-side configuration and of serving up client-side content, check out the configuration\nof `tests/js/launch-test-harness.js` and `tests/js/test-harness.js`,",
  "readmeFilename": "README.md",
  "_id": "gpii-express-user@1.0.0",
  "_shasum": "93710dcca12c285da45cd8a7a96a06eb05963a78",
  "_from": "git://github.com/the-t-in-rtf/gpii-express-user.git#8e635db62eb0ad7c286a9d1b802ab366b6107c29",
  "_resolved": "git://github.com/the-t-in-rtf/gpii-express-user.git#8e635db62eb0ad7c286a9d1b802ab366b6107c29"
}
